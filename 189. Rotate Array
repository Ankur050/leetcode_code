class Solution {
public:
    void rotate(vector<int> &nums,int k){
        int n=nums.size();
        k=k%n;
        vector<int> temp(n,0);
        for(int i=0;i<k;i++){
            temp[i]=nums[n-k+i];
        }
        for(int i=0;i<n-k;i++){
            temp[k+i]=nums[i];
        }
        nums=temp;
    }
};

    -------------------------------------                   -----------------------------          0r                   --------------------------

    class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int>ans(n, 0);
        k = k % n;
        for (int i = 0; i < n - k; i++)
        {
            ans[i + k] = nums[i];
        }
        for (int i = 0; i < k; i++)
        {
            ans[i] = nums[n - k + i];
        }
        nums = ans;
    }
};



-  ----------------------------            -------------       orr   bu using reversal          ---------------------        --------------------------






class Solution {
public:
    void rotate(vector<int>& nums, int k) {
      
  if (k == 0 || (k %= nums.size()) == 0 ){
  return ; }
  reverse(nums.begin(),nums.end());   //reverse all 
  reverse(nums.begin(),nums.begin()+k); //reverse before k  
  reverse(nums.begin()+k,nums.end()); //reverse after k 
}
};




   
